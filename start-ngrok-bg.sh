#!/bin/bash

echo "===== Iniciando T√∫nel ngrok em modo background ====="

# Verificar se ngrok est√° instalado
if ! command -v ngrok &> /dev/null; then
    echo "‚öôÔ∏è Instalando ngrok..."
    curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.tgz | tar xvz
    sudo mv ngrok /usr/local/bin/
    echo "‚úÖ ngrok instalado com sucesso!"
fi

# Configurar token
echo "üîë Configurando token de autentica√ß√£o..."
ngrok authtoken 2uQhUIL3Tvqz0if62yPUcJVOsSm_75gZdr2NFomLuq59WFLAE

# Encerrar inst√¢ncias existentes
echo "üîÑ Encerrando inst√¢ncias anteriores do ngrok..."
pkill -f ngrok 2>/dev/null || true
sleep 2

# Verificar porta 80
echo "üîç Verificando porta 80..."
if ! curl -s http://localhost:80 -o /dev/null; then
    echo "‚ö†Ô∏è AVISO: A porta 80 n√£o est√° respondendo! Verifique seu container Docker."
    exit 1
fi

# Iniciar ngrok em background
echo "üöÄ Iniciando ngrok em background..."
nohup ngrok http 80 > /dev/null 2>&1 &

# Aguardar ngrok iniciar
echo "‚è≥ Aguardando ngrok iniciar..."
sleep 5

# Obter URLs
echo "üì° Obtendo URLs do ngrok..."
API_URL="http://localhost:4040/api/tunnels"
URLS=$(curl -s $API_URL)

if [[ -z "$URLS" || "$URLS" == *"\"tunnels\":[]"* ]]; then
    echo "‚ùå ERRO: Ngrok falhou ao iniciar ou criar t√∫nel!"
    echo "Tente executar o comando manualmente: ngrok http 80"
    exit 1
fi

HTTP_URL=$(echo $URLS | grep -o '"public_url":"http://[^"]*' | grep -o 'http://[^"]*')
HTTPS_URL=$(echo $URLS | grep -o '"public_url":"https://[^"]*' | grep -o 'https://[^"]*')

echo ""
echo "=================================================="
echo "‚úÖ T√öNEL NGROK ATIVO!"
echo "=================================================="
echo ""
echo "üîó HTTP URL: $HTTP_URL"
echo "üîí HTTPS URL: $HTTPS_URL (Recomendado)"
echo ""
echo "üìä Painel de controle: http://localhost:4040"
echo ""
echo "O t√∫nel permanecer√° ativo em segundo plano."
echo "Para encerrar, execute: pkill -f ngrok"
echo "" 