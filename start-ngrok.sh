#!/bin/bash

echo "===== Iniciando T√∫nel ngrok para Assistente Imobili√°rio ====="

# Verificar se ngrok est√° instalado
if ! command -v ngrok &> /dev/null; then
    echo "‚öôÔ∏è Instalando ngrok..."
    curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.tgz | tar xvz
    sudo mv ngrok /usr/local/bin/
    echo "‚úÖ ngrok instalado com sucesso!"
fi

# Configurar token
echo "üîë Configurando token de autentica√ß√£o..."
ngrok authtoken 2uQhUIL3Tvqz0if62yPUcJVOsSm_75gZdr2NFomLuq59WFLAE

# Encerrar inst√¢ncias existentes
echo "üîÑ Encerrando inst√¢ncias anteriores do ngrok..."
pkill -f ngrok 2>/dev/null || true
sleep 2

# Verificar porta 80
echo "üîç Verificando se a porta 80 est√° dispon√≠vel..."
if ! curl -s http://localhost:80 > /dev/null; then
    echo "‚ö†Ô∏è AVISO: A porta 80 parece n√£o estar respondendo localmente!"
    echo "‚ö†Ô∏è Verifique se o seu container Docker est√° rodando:"
    docker ps
    echo ""
    read -p "Continuar mesmo assim? (s/n): " resposta
    if [[ "$resposta" != "s" ]]; then
        echo "‚ùå Opera√ß√£o cancelada pelo usu√°rio."
        exit 1
    fi
fi

echo ""
echo "===================================================="
echo "üöÄ INICIANDO NGROK - AGUARDE A URL ABAIXO"
echo "===================================================="
echo ""
echo "A URL ser√° exibida nas linhas 'Forwarding' abaixo"
echo "Use a URL HTTPS (segunda linha) para compartilhar"
echo "Pressione Ctrl+C para encerrar quando terminar"
echo ""

# Executar ngrok com diagn√≥stico de erros
set -x  # Mostrar comandos sendo executados
exec ngrok http 80 